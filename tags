!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Block	logic.h	/^struct Block {$/;"	s
Block::id	logic.h	/^    int id;$/;"	m	struct:Block	access:public
Block::pos	logic.h	/^    int pos;$/;"	m	struct:Block	access:public
Block::x	logic.h	/^    int x, y;$/;"	m	struct:Block	access:public
Block::y	logic.h	/^    int x, y;$/;"	m	struct:Block	access:public
Block_Matrix	logic.c	/^const int Block_Matrix[NBLOCK][NPOS][NMATRIX][NMATRIX] = {$/;"	v
Block_hard_drop	logic.c	/^void Block_hard_drop(struct Logic *logic)$/;"	f	signature:(struct Logic *logic)
Block_hard_drop	logic.h	/^extern void Block_hard_drop(struct Logic *logic);$/;"	p	signature:(struct Logic *logic)
Block_move	logic.c	/^int Block_move(struct Logic *logic, struct Block *block, int dir)$/;"	f	signature:(struct Logic *logic, struct Block *block, int dir)
Block_new	logic.c	/^struct Block *Block_new(const struct Logic *logic)$/;"	f	signature:(const struct Logic *logic)
Block_pos	logic.h	/^enum Block_pos { UP, LEFT, RIGHT, DOWN };$/;"	g
Block_rotate	logic.c	/^void Block_rotate(struct Logic *logic, struct Block *block)$/;"	f	signature:(struct Logic *logic, struct Block *block)
Block_rotate	logic.h	/^extern void Block_rotate(struct Logic *logic, struct Block *block);$/;"	p	signature:(struct Logic *logic, struct Block *block)
Block_type	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	g
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-lpthread -s$/;"	m
COL	main.c	14;"	d	file:
COL	tantrix_curses.c	17;"	d	file:
Cells_new	logic.c	/^int *Cells_new(int row, int col)$/;"	f	signature:(int row, int col)
DOWN	logic.h	/^enum Block_pos { UP, LEFT, RIGHT, DOWN };$/;"	e	enum:Block_pos
I	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
L	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
LEFT	logic.h	/^enum Block_pos { UP, LEFT, RIGHT, DOWN };$/;"	e	enum:Block_pos
Logic	logic.h	/^struct Logic {$/;"	s
Logic::cells	logic.h	/^    int *cells;$/;"	m	struct:Logic	access:public
Logic::cur_block	logic.h	/^    struct Block *cur_block;$/;"	m	struct:Logic	typeref:struct:Logic::Block	access:public
Logic::isOver	logic.h	/^    int isOver;$/;"	m	struct:Logic	access:public
Logic::level	logic.h	/^    int level;$/;"	m	struct:Logic	access:public
Logic::lines	logic.h	/^    int lines;$/;"	m	struct:Logic	access:public
Logic::ncol	logic.h	/^    int ncol;$/;"	m	struct:Logic	access:public
Logic::next_block	logic.h	/^    struct Block *next_block;$/;"	m	struct:Logic	typeref:struct:Logic::Block	access:public
Logic::nrow	logic.h	/^    int nrow;$/;"	m	struct:Logic	access:public
Logic::score	logic.h	/^    int score;$/;"	m	struct:Logic	access:public
Logic_advance	logic.c	/^int Logic_advance(struct Logic *logic, int dir)$/;"	f	signature:(struct Logic *logic, int dir)
Logic_advance	logic.h	/^extern int Logic_advance(struct Logic *logic, int dir);$/;"	p	signature:(struct Logic *logic, int dir)
Logic_get_cell	logic.c	/^void Logic_get_cell(const struct Logic *logic, int *cells)$/;"	f	signature:(const struct Logic *logic, int *cells)
Logic_get_cell	logic.h	/^extern void Logic_get_cell(const struct Logic *logic, int *cells);$/;"	p	signature:(const struct Logic *logic, int *cells)
Logic_init	logic.c	/^struct Logic *Logic_init(int row, int col)$/;"	f	signature:(int row, int col)
Logic_init	logic.h	/^extern struct Logic *Logic_init(int row, int col);$/;"	p	signature:(int row, int col)
Logic_quit	logic.c	/^void Logic_quit(struct Logic *logic)$/;"	f	signature:(struct Logic *logic)
Logic_quit	logic.h	/^extern void Logic_quit(struct Logic *logic);$/;"	p	signature:(struct Logic *logic)
M_CENTER	logic.c	8;"	d	file:
NBLOCK	logic.h	/^enum { NBLOCK = 7, NMATRIX = 4, NPOS = 4 };$/;"	e	enum:__anon2
NMATRIX	logic.h	/^enum { NBLOCK = 7, NMATRIX = 4, NPOS = 4 };$/;"	e	enum:__anon2
NPOS	logic.h	/^enum { NBLOCK = 7, NMATRIX = 4, NPOS = 4 };$/;"	e	enum:__anon2
OBJS	Makefile	/^OBJS=input.o logic.o$/;"	m
RIGHT	logic.h	/^enum Block_pos { UP, LEFT, RIGHT, DOWN };$/;"	e	enum:Block_pos
RL	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
ROW	main.c	13;"	d	file:
ROW	tantrix_curses.c	16;"	d	file:
RZ	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
S	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
Score_box	tantrix_curses.c	/^} Score_box = {$/;"	v	typeref:struct:__anon1
Screen_init	screen.h	/^extern void Screen_init(void);$/;"	p	signature:(void)
Screen_quit	screen.h	/^extern void Screen_quit(void);$/;"	p	signature:(void)
Screen_refresh	screen.h	/^extern void Screen_refresh(void);$/;"	p	signature:(void)
T	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
UP	logic.h	/^enum Block_pos { UP, LEFT, RIGHT, DOWN };$/;"	e	enum:Block_pos
WIN_H	tantrix_curses.c	13;"	d	file:
WIN_W	tantrix_curses.c	14;"	d	file:
Z	logic.h	/^enum Block_type { T = 1, Z, L, RL, S, I, RZ};$/;"	e	enum:Block_type
__INPUT_H	input.h	2;"	d
__LOGIC_H	logic.h	2;"	d
__SCREEN_H_	screen.h	2;"	d
__anon1::h	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
__anon1::level	tantrix_curses.c	/^  int level, score, lines;$/;"	m	struct:__anon1	file:	access:public
__anon1::lines	tantrix_curses.c	/^  int level, score, lines;$/;"	m	struct:__anon1	file:	access:public
__anon1::next_block	tantrix_curses.c	/^  int next_block;$/;"	m	struct:__anon1	file:	access:public
__anon1::score	tantrix_curses.c	/^  int level, score, lines;$/;"	m	struct:__anon1	file:	access:public
__anon1::w	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
__anon1::x	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
__anon1::y	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
box_id_unicode	tantrix_curses.c	/^char *box_id_unicode(int id)$/;"	f	signature:(int id)
cell_old	tantrix_curses.c	/^int *cell_old;$/;"	v
cells	logic.h	/^    int *cells;$/;"	m	struct:Logic	access:public
clear_lines	logic.c	/^int clear_lines(struct Logic *logic)$/;"	f	signature:(struct Logic *logic)
cur_block	logic.h	/^    struct Block *cur_block;$/;"	m	struct:Logic	typeref:struct:Logic::Block	access:public
curses_init	tantrix_curses.c	/^void curses_init()$/;"	f
curses_quit	tantrix_curses.c	/^void curses_quit()$/;"	f
does_collide	logic.c	/^int does_collide(const struct Logic *logic, const struct Block *block)$/;"	f	signature:(const struct Logic *logic, const struct Block *block)
draw_nextblock	tantrix_curses.c	/^void draw_nextblock(struct Logic *logic)$/;"	f	signature:(struct Logic *logic)
draw_overlay	tantrix_curses.c	/^void draw_overlay()$/;"	f
draw_screen	tantrix_curses.c	/^void draw_screen()$/;"	f
h	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
id	logic.h	/^    int id;$/;"	m	struct:Block	access:public
isOver	logic.h	/^    int isOver;$/;"	m	struct:Logic	access:public
is_paused	tantrix_curses.c	/^int is_paused;$/;"	v
level	logic.h	/^    int level;$/;"	m	struct:Logic	access:public
level	tantrix_curses.c	/^  int level, score, lines;$/;"	m	struct:__anon1	file:	access:public
lines	logic.h	/^    int lines;$/;"	m	struct:Logic	access:public
lines	tantrix_curses.c	/^  int level, score, lines;$/;"	m	struct:__anon1	file:	access:public
logic	tantrix_curses.c	/^struct Logic *logic;$/;"	v	typeref:struct:Logic
logo	tantrix_curses.c	/^const char *logo = " _____ _____ _____ ____  ___ ____  \\n"$/;"	v
main	main.c	/^int main()$/;"	f
main	tantrix_curses.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
ncol	logic.h	/^    int ncol;$/;"	m	struct:Logic	access:public
next_block	logic.h	/^    struct Block *next_block;$/;"	m	struct:Logic	typeref:struct:Logic::Block	access:public
next_block	tantrix_curses.c	/^  int next_block;$/;"	m	struct:__anon1	file:	access:public
nrow	logic.h	/^    int nrow;$/;"	m	struct:Logic	access:public
pos	logic.h	/^    int pos;$/;"	m	struct:Block	access:public
print_cells	main.c	/^void print_cells(int *cells, struct Logic *logic)$/;"	f	signature:(int *cells, struct Logic *logic)
print_cells	tantrix_curses.c	/^void print_cells(int *cells, struct Logic *logic)$/;"	f	signature:(int *cells, struct Logic *logic)
put_block	logic.c	/^void put_block(struct Logic *logic, const struct Block *block)$/;"	f	signature:(struct Logic *logic, const struct Block *block)
quit	tantrix_curses.c	/^int quit;$/;"	v
resize	tantrix_curses.c	/^void resize(int sig)$/;"	f	signature:(int sig)
score	logic.h	/^    int score;$/;"	m	struct:Logic	access:public
score	tantrix_curses.c	/^  int level, score, lines;$/;"	m	struct:__anon1	file:	access:public
termios_init	input.c	/^void termios_init()$/;"	f
termios_init	input.h	/^extern void termios_init(void);$/;"	p	signature:(void)
tlogic_func	main.c	/^void *tlogic_func(void *arg)$/;"	f	signature:(void *arg)
tlogic_func	tantrix_curses.c	/^void *tlogic_func(void *arg)$/;"	f	signature:(void *arg)
w	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
win_cell	tantrix_curses.c	/^WINDOW *win_cell;$/;"	v
win_score	tantrix_curses.c	/^WINDOW *win_score;$/;"	v
x	logic.h	/^    int x, y;$/;"	m	struct:Block	access:public
x	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
y	logic.h	/^    int x, y;$/;"	m	struct:Block	access:public
y	tantrix_curses.c	/^  int x, y, w, h;$/;"	m	struct:__anon1	file:	access:public
